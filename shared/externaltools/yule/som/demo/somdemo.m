function [w,mov] = somdemo(shapefun, niter, seed)
% SOMDEMO(SHAPEFUN, NITER, [SEED])
% function to demonstrate the SOM learning function with a 2D or 3D grid of
% output nodes and typical learning parameters

% grid size
N = 5;

% learning parameters

MU_I        = 0.5;          % learning rate: initial
MU_F        = 0.1;          %              : final

SIGMA_I     =  3.0e0;       % attraction between points : initial
SIGMA_F     =  1.0e-1;      %                           : final

% points to learn, generated by shape function
a = feval(shapefun);

% deduce dimensions from these points
d = size(a,2);

% set up grid of output units based on dimensionality
switch d
    case 2
        [o(:,1), o(:,2)] = ind2sub([N N], 1:N^2);
    case 3
        [o(:,1), o(:,2), o(:,3)] = ind2sub([N N N], 1:N^3);
    otherwise
        error('This demo only works with two- or three-dimensional shapes')
end

% seed random-number generator if specified
if nargin > 2
    rand('state', seed)
end

% create random initial weights
w = rand(N^d, d);

% clear previous plot
clf

% plot points to learn for 2D
if d == 2
    hold on
    plot_points(a)
end

% show first time step
h = plot_nodes(w);
title('T = 0.  Hit any key...')
waitforbuttonpress;
figure(1)

% run SOM learning for specified number of steps
for t = 1:niter
    if t < niter
        delete(h)
    end
    h = plot_nodes(w);
    drawnow
    title(sprintf('T = %d', t))
    w = somlearn(w, o, a, MU_I, MU_F, SIGMA_I, SIGMA_F, t, niter);
end

